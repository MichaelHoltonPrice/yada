% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_io.R
\name{build_univariate_cont_problems}
\alias{build_univariate_cont_problems}
\title{Build a list of univariate continuous problems}
\usage{
build_univariate_cont_problems(
  data_dir,
  analysis_name,
  mean_specs = c(rep("pow_law", 2)),
  noise_specs = c("const", "lin_pos_int"),
  add_folds = FALSE
)
}
\arguments{
\item{data_dir}{The data directory with problems and results}

\item{analysis_name}{A unique analysis name (for the input data directory)}

\item{mean_specs}{A vector of mean specifications for the continuous models
(default: [c('pow_law','pow_law')])}

\item{noise_specs}{A vector of noise specifications for the continuous models
(default: [c('const','lin_pos_int'])}

\item{add_folds}{Whether or not to include cross validation folds in the
return list}
}
\value{
A list of problems
}
\description{
The data directory (data_dir) contains a main problem file uniquely
determined by the analysis name (analysis_name), and possibly some
corresponding fold problems. Return a list of univariate problems to
solve. The model specifications to include in the returned list are specified
by mean_specs and noise_specs, which must be the same lengths. By default,
all combinations of mean specifications and noise specifications supported by
yada are used; there is one continuous mean specification (pow_law) and two
noise specifications (const and lin_pos_int), so by default there are
num_models = 2 six total model specifications. By default, cross  validation
fold problems are not included, in which case the return list, ord_prob_list,
has length num_models * K. If the cross validation problems are included,
cont_prob_list has length num_models * K * (1+num_folds).
}
